@Library('Shared-Library')_
pipeline {
    agent any
    
    environment {
        imageName   		    = 'ramy282/Grad-project'     	         // DockerHub repo/image name.
        dockerHubCredentialsID	    = 'DockerHub'  		    		// DockerHub credentials ID.
	openshiftCredentialsID	    = 'oc-token'		         	// service account token credentials ID
	openshiftClusterURL	    = 'https://api.ocp-training.ivolve-test.com:6443'
	nameSpace                   = 'ramyanwar'
	gitRepoName 	            = 'MultiCloudDevOpsProject'
        gitUserName 	            = 'ramy282'
	gitUserEmail                = 'ramyanwar282@gmail.com'
	githubToken                 = 'github-token'
	sonarTokenCredentialsID     = 'sonar-token'

    }
    
    stages {       

        stage('Run Unit Test') {
            steps {
                script {
                
                	         runUnitTests()
                    
        	}
    	    }
	}
	stage('Build') {
            steps {
                script {
                	
                	         build()	
                    
        	}
            }
        }
	stage('SonarQube Analysis') {
            steps {
                script {
                                sonarQubeAnalysis()	
                        
            }
        }
    }

    stage('Build and Push Docker Image') {
        steps {
            script {
                
                        buildandPushDockerImage("${dockerHubCredentialsID}", "${imageName}")
                	
            }
        }
    }
    stage('Edit new image in deployment.yaml file') {
            steps {
                script { 
                    
                    editNewImage("${githubToken}", "${imageName}", "${gitUserEmail}", "${gitUserName}", "${gitRepoName}")
                
                }
            }
        }

    stage('Deploy on OpenShift Cluster') {
        steps {
            script { 
                dir('openshift') {
                            
                    deployOnOc("${openshiftCredentialsID}", "${nameSpace}", "${clusterUrl}")
                }
            }
        }
    }
    }

    post {
        success {
            echo "${JOB_NAME}-${BUILD_NUMBER} pipeline succeeded"
        }
        failure {
            echo "${JOB_NAME}-${BUILD_NUMBER} pipeline failed"
        }
    }
}
